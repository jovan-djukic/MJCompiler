program TypeChecksWithputErrors

class class1 {
	int a, b, c;
	
	{
		int method1(int a, char b, int c)
			int d;
		{
			return 0;
		}
		
		static void staticMethod1(int a, int b, int c) {
		
		}
	}
}

class class2 extends class1 {
	int d, e, f, g, h;
	
	{
		void method2() {
		
		}
	}
}

{
	int globalFunction1(int parameter1, int parameter2, char parameter3)
		int local1, local2[];
		char local3[], local4;
	{
			
	}
	
	void globalFunction2(class1 parameter1) {
	
	}
	
	void main()
		class1 instance1, instance2;
		class2 instance3;
		int a, b[];
		char c[], d[];
	{
		// new Type checks
		instance1 = new class1;
		instance3 = new class2;
		
		//Factor type checks
		a = 5 + 5 * 5 + 5;
		c = new char[10];
		d = new char[a];
		b = new int[a];
		
		//expression type checks
		instance1.a += 5;
		a += 5;
		b[0] += a;
		a = -a;
		
		if ( a == a && d[0] < c[0] && instance1 != instance2) {
			
			//global function parameter type and number checks 
			globalFunction1(1, 2, 'a');
			globalFunction1(globalFunction1(globalFunction1(globalFunction1(1, 2, 'a'), 3, 'b'), 4, 'c'), 5, 'd');
			instance1.method1(1, 'a', 2);
		}
		
		//global function parameter type and number checks when using factor production
		a = b[0] + globalFunction1(1, instance1.method1(1, 'a', 2), 'a') + instance1.method1(1, 'a', 2) + globalFunction1(globalFunction1(globalFunction1(globalFunction1(1, 2, 'a'), 3, 'b'), 4, 'c'), 5, 'd');
	
		////global function parameter type and number checks for super class - sub class
		globalFunction2(instance3);
		
		//increment and decrement type checks
		a++;
		b[0]++;
		instance3.a++;
		
		//assign operation type checks
		a += 5;
		c[0] = 'a';
		instance1.b *= 2;
		instance1 = instance3;
	}
}	