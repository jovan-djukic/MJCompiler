program MJProgram
	const int a = 2, b = 3;
	const char c = '\n', z = 'a', q = '\040';
	const bool w = true;
	int x, y;
	int r, t;
	int array1[], array2[], array3[];
	
	class ParentClass {
		char t, f, g;
		
		{
			int m(int p1 char p2) { return 1; }
		
			void foo()
				char message[];
			{
				message = new char[5];
				message[0] = 'H';
				message[1] = 'e';
				message[2] = 'l';
				message[3] = 'l';
				message[4] = 'o';
				print(message, 5);
			}
		}
	}
	
	class MyClass extends ParentClass {
		int a, b, c, d;
	
		{
			static void m(int p1, char p2) 
				int i;
			{
				for (i = 0; i < 3; i++) 
					if ( x > y) {
						for ( i = 2; i < 4; i++) {
							print('*');
							continue;
						}
					}
						
							
				if ( a >= b || a <= b && c == d) {
					a = - 5;
				}
				
			}
			
			void g(int p1)
				char c1, c2;
			{
				if ( ) b++;
				if (a > b) if ( a >  ) {
				
				} else {
				
				}
			}
		}
	}
	
{
	void global1(int p1, int p2 int p3, int p4) {

	}
	
	void main()
		int a, b;
		char c, d;
		MyClass instance;
		ParentClass parent;
	{
		instance = new MyClass;
		parent = new MyClass;
		for () {} 
		for ( new ; a < 5; a++) {}
		for ( a = 0 ; new; a++) {}
		for ( a = 0 ; a < 5; new) {}
		for ( a = 0 ; a < 5; a++) {}
		array1[ return ] = 5;
	}
}