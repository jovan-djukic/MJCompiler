program MJProgram
	const int a = 2, b = 3;
	const char c = '\n', z = 'a', q = '\040';
	const boolean w = true;
	int x, y;
	char r, t;
	int array1[], array2[];
	
	class ParentClass {
		char t, f, g;
		
		{
			int m() { return 1; }
		
			void foo()
				char message[];
			{
				message = new char[5];
				message[0] = 'H';
				message[1] = 'e';
				message[2] = 'l';
				message[3] = 'l';
				message[4] = 'o';
				print(message, 5);
			}
		}
	}
	
	class MyClass extends ParentClass {
		int a[], b, c;
	
		{
			static void m() 
				char a;
			{
				a = '=';
				for (i = 0; i < 3; i++) 
					if ( x > y) {
						for ( i = 2; i < 4; i++) {
							print(a);
							continue;
						}
						break;
					}
						
							
				print(c);
				
				fcall1(a, b, c, a + b);
				
				if ( a >= b || a <= b && c == d) {
					a = - 5;
				}
				
				break;
				continue;
				return;
			}
			
			void g() {
				if (c > b) b++;
				if (c > b) if ( c > b ) {
				
				} else {
				
				}
				
				b += c;
				
				a = new int[5];
			}
		}
	}
	
	
	
{
	void main()
		int a, b;
		MyClass instance;
		ParentClass parent;
	{
		instance = new MyClass;
		parent = new MyClass;
		instance.g();
		intsance.t = 'a';
		instance.a[5] = 2;
		parent.m();
	}
}